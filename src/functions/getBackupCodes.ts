import type { AccountCredentials, BackupCodes } from 'types';
import { DAICHI2_DOWNLOAD_BACKUP_CODES_URL, DAICHI2_SHOW_BACKUP_CODES_URL } from 'constants/uris';
import { exec, isNonEmptyString } from 'utils/general';
import { waitUntilTimeout } from 'utils/async';

/**
 * @description Only useful when the user is logged in.
 * Otherwise it would not work with 2FA enabled.
 */
export async function getBackupCodes({ username, password }: AccountCredentials): Promise<BackupCodes> {
	let backupCodes = '';

	/**
	 * @description When no account credentials were found.
	 */
	if (isNonEmptyString(username) && isNonEmptyString(password)) {
		backupCodes = await waitUntilTimeout(
			exec(() =>
				fetch(DAICHI2_SHOW_BACKUP_CODES_URL, {
					credentials: 'same-origin',
					method: 'POST',
					headers: {
						'Content-Type': 'application/x-www-form-urlencoded',
					},
					body: 'current_pass=' + encodeURIComponent(password),
				})
			).then((response) => {
				if (!response.ok) return '';

				return exec(() =>
					fetch(DAICHI2_DOWNLOAD_BACKUP_CODES_URL, { credentials: 'same-origin' }).then((response) => {
						if (!response.ok) return '';

						/**
						 * @description Incorrect request. No file with backup codes returned.
						 */
						if (response.headers.get('Content-Type').toLowerCase().includes('html')) return '';

						return response.text();
					})
				);
			}),
			1500,
			''
		);
	}

	return { backupCodes };
}
