import type { AccountCredentials } from 'types';
import { DAICHI2_LOGIN_URL } from 'constants/uris';
import { getUsername } from './getUsername';
import { getMeta } from './getMeta';
import { accounts } from 'accounts.json';
import { isNonEmptyString, isObject } from 'utils/general';

export const compareUsernames = (a: string, b: string): boolean => a.trim().toLowerCase() === b.trim().toLowerCase();

export async function getAccountCredentials(): Promise<AccountCredentials> {
	let username = await getUsername();
	let account = accounts.find((account) => compareUsernames(account.username, username));

	if (isObject(account) && isNonEmptyString(account.username) && isNonEmptyString(account.password)) {
		return account;
	}

	const usernameInput = document.createElement('input');
	usernameInput.type = 'text';
	usernameInput.name = 'user';
	usernameInput.autocomplete = 'username';

	const passwordInput = document.createElement('input');
	passwordInput.type = 'password';
	passwordInput.name = 'pass';
	passwordInput.autocomplete = 'current-password';

	const usernameProm = new Promise<string>((resolve) => usernameInput.addEventListener('input', () => resolve(usernameInput.value)));
	const passwordProm = new Promise<string>((resolve) => passwordInput.addEventListener('input', () => resolve(passwordInput.value)));

	const credentialsForm = document.createElement('form');
	credentialsForm.action = DAICHI2_LOGIN_URL;
	credentialsForm.method = 'post';
	credentialsForm.style.display = 'none';
	credentialsForm.appendChild(usernameInput);
	credentialsForm.appendChild(passwordInput);

	/**
	 * Before we can add the form element to the DOM we have to wait for overlay surface.
	 */
	const meta = getMeta();
	await meta.surfaceOverlayed;

	document.documentElement.appendChild(credentialsForm);

	/**
	 * Without focus, input event is not triggered by autocomplete in some browsers when
	 * placed inside of IFrames.
	 */
	usernameInput.focus();
	passwordInput.focus();

	username = (await usernameProm) || username;
	const password = await passwordProm;

	document.documentElement.removeChild(credentialsForm);

	return { username, password };
}
